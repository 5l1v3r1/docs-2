requirements do
message <<-MARKDOWN
* The user should be able to create a post with a name, author, date published, and content. The author should be the current user. 
* The complete post should appear on its own page (aka its show page).
* If the user doesn’t submit all required fields, they should see some error messaging, but shouldn’t lose any of their work.
MARKDOWN
end

discussion do
message <<-MARKDOWN
* How do you create a resource? What parameters do you need to pass?
* Then: what did rails make for you when you called resource? Find all the new files. Maybe even list them out on a whiteboard.
* You’re gonna need a posts controller, a post model, and a couple of different views. What’s the best order to make them in?
MARKDOWN
end

tools_and_references do
message <<-MARKDOWN
* RailsGuides - Form Helpers, section 2.2: <http://guides.rubyonrails.org/form_helpers.html#binding-a-form-to-an-object>
* RailsGuides - Routes - CRUD, Verbs, and Actions: <http://guides.rubyonrails.org/routing.html#crud-verbs-and-actions>.
* RailsGuides - Active Record Validations and Callbacks: <http://guides.rubyonrails.org/active_record_validations_callbacks.html>
MARKDOWN
end

hints do
message <<-MARKDOWN
* Don't hand code the form! You don't have to! Rails will help. See RailsGuide link above! 
* Rails has a built-in way to note when something was stored in the database. Probably handy for showing the date / time a post was created.
* For now, we're going to use the user's email address to identify them. You can add names or other identifiers later! (Also, even though you're going to get the current user's email address from the User model, you'll still need a user parameter for your Post resource.)
MARKDOWN
end

next_step "make_a_posts_index_page"
