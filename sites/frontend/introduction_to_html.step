goals do
  goal "Provide an introduction to HTML"
end

explanation do
  markdown <<-MARKDOWN
## What is HTML? ##

HTML stands for __H__yper-__t__ext __M__arkup __L__anguage.

Let's go through each of those words in reverse order and explain them...

* __L__anguange - People use different languages for different types of
communication. We use languages such as English or Mandarin for human
communication or languages such as Ruby or Java to give instructions to
computers.  HTML is a special language for describing documents.

* __M__arkup - Being a *markup* language means that HTML is mixed in with plain
content text. Think of a time when you turned in an essay to your teacher. Your
teacher reads your essay and *marks* it *up* with comments or suggestions.

- __H__yper-__t__ext - This term comes from the fact that early computers could
only work with plain text files. Computer users as early as the 1960s wanted to
enrich this text and make it easier to work with. Thus, hypertext was born. It
is text because the file is stored as plain text, yet hyper because the text has
a special meaning beyond the plain text when interpreted by a special program.
For HTML, that special program is your web browser.

## A First Example ##
  MARKDOWN

  markdown <<-MARKDOWN
As always, we start with a simple hello world. Since HTML embellishes plain text
our first example is going to be plain text.
  MARKDOWN
  # Do we want people to be creating HTML documents yet? I'm tempted to have
  # everyone fire up an editor and start with hello.html

  # hello.html
  source_code "HTML", "Hello World!"

  markdown <<-MARKDOWN
If you were to save that to a file, and then open it in $BROWSER, you would see

---

Hello World!

---

But that doesn't show us how *hyper*text works.

## HTML is Tags ##

In order to add special meaning to text, we need give the browser clues about
how the text should look but we have to do so in a way that makes it easy for
both browsers and people to tell the difference between content and hypertext.
HTML does this with "tags". An HTML tag is encased within `<`, `>`, called
"angle brackets". An example tag is `<html>`. Every tag has an accompanying
closing tag. Closing tags are also encased in angle brackets but begin with a
forward slash. `</html>` is the tag for closing our first one. We'll use a tag
now to add some emphasis to the word "Hello" in our example.
  MARKDOWN

  # hello.html
  source_code "HTML", "<em>Hello</em> World!"

  markdown <<-MARKDOWN
Update your hello.html file to include the `<em></em>` tags. `em` is short for
emphasis. It's a tag that means we want the text to stand out in front of the
user. If you reopen or refresh the file in $BROWSER, you should see something
like

---

<em>Hello</em> World!

---

## Tags for Every Occasion

The meteoric rise in popularity of the world-wide-web and the recent
proliferation of web applications has made HTML hugely popular. While originally
used only for simple documents, HTML now has features for embedded video and
music playback, embedding images, filling out web forms, and all kinds of useful
tags.
  MARKDOWN

  todo "Add short list of useful and diverse HTML tags and their uses."
end

