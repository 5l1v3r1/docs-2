
step "About Rails on Windows" do
  note "These instructions should work for all versions of Windows from XP on to Windows 7."
  note "You may need to login as Administrator, or give the Administrator password when installing some programs, depending on your Windows version and user settings."
end

step "Run RailsInstaller" do

  note "RailsInstaller includes Rails, Ruby, DevKit, Git, and SQLite."

  note <<-MARKDOWN

* Go to <http://railsinstaller.org/> and download the kit.  

* Click on the downloaded file to run the install wizard.  Click Next at each step to accept the defaults.

 * Be sure to check the box for "Add executables for Ruby, Git and DevKit to the PATH"

![Winxprailsinstaller.jpg](Winxprailsinstaller.jpg)

* Rails will be installed in C:\\RailsInstaller and the directory for your Rails projects will be C:\\Sites

* From the Windows Start menu, go to Programs, RailsInstaller, Console with Ruby and Rails

* The first time you run this program, it will ask you to enter your name and email address. After doing this, test your Ruby install in the terminal using the -v version flag
<pre>
ruby -v
</pre>
You should see something like
<pre>
ruby 1.9.2p290 (2011-07-09) [i386-mingw32]
</pre>


* Test your Rails install in the terminal using the -v version flag
<pre>
rails -v
</pre>
You should see something like
<pre>
Rails 3.1.0
</pre>

  MARKDOWN
  end

step "Open a Terminal " do
  note <<-MARKDOWN

* Much of  using Rails is typing commands and hitting **&lt;enter&gt;**.  Your experience using Rails on Windows greatly depends on your making friends with the terminal window.  Normally you will work in a terminal window and keep it open along with your browser.

* This is also called the terminal, command window, command-line window, MS-DOS or DOS window. Follow these instructions if you need to open a normal DOS window:
[Opening a terminal window](opening_a_command_prompt_window)

* Rails Installer made a special DOS terminal window for you to use when you're working on Ruby, Rails, or Git.  To open the special Rails window, choose "Programs" on the Start menu, then choose "RailsInstaller" and then "Console with Ruby and Rails".  You should do all your Rails work in this RailsInstaller DOS window.

* Try these recommendations:
[Recommended setup for command-line windows](recommended_setup_for_command_line_windows)

* Tip: **clear screen** <br/>If you ever want to clear the &quot;output history&quot; to get a clear screen, type:
<pre>
cls
</pre>

* Tip: **command history** <br/>The terminal window stores a &quot;command history.&quot; To view and re-run previous commands, use the &lt;up arrow&gt; and &lt;down arrow&gt; keys.  You can also edit a previous command and run it -- this is handy for long commands, or fixing mistakes.

* Tip: **copy and paste** <br/>In the instructions below, where it says: &quot;In the terminal type:&quot;, you can, much more easily, copy the command from this page, and right click in the menu bar or terminal window, then click on &quot;Paste&quot;, then hit the **[enter]** key.

  MARKDOWN
end

step "Install Windows Colors" do

  note "this step is optional, but **highly** recommended"

  link "windows_colors"
  
end

step "Configure Git" do

  console <<-BASH
git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto
  BASH
  
  todo "make a unified 'configure git' page"

end

step "Install SQLite Manager " do
  link "install_sqlite_manager"
end

step "Install KomodoEdit " do
  note <<-MARKDOWN

You need a text editor to do Ruby. If you already have a preferred text editor, such as vi, emacs, jedit, etc., you can skip this step. It must be a plain text editor and not something with styling like Microsoft Word or WordPad.  

Notepad is a good programming editor.

**When in doubt, use KomodoEdit.**

* [<http://downloads.activestate.com/Komodo/releases/6.1.1/Komodo-Edit-6.1.1-7295.msi> Download KomodoEdit here].

* Double-click to install.

  MARKDOWN
end

step "Create an ssh public key" do
  note "You'll need one of these to create your Heroku account in the next section."

  note "Be sure to use the same e-mail address that you used when you set up Git."
  
  note "**REPLACE** student@example.com with your **actual email address** below."

  console "ssh-keygen -C student@example.com -t rsa"

  choice "keyphrase" do
    option "Hit enter to accept blank passphrase, then hit enter again"
    option "If your computer is shared with other people, as in a work laptop, you should choose and enter a real passphrase. Twice."
  end

  todo "expected output of ssh-keygen command"
  
  verify do
    note "Your brand-new public key is now stored at `HOME/.ssh/id_rsa.pub`"
    todo "what is a home directory?"
  end
end

step "Create a Heroku Account " do
  note <<-MARKDOWN

* <http://heroku.com> -&gt; Sign Up -&gt; enter email address (use the same email as you did with git and the ssh public key).

* Heroku will send you an activation email. Open it and click on the activation link. It will take you to the Heroku site. Enter and confirm your password. Hit Save.


* **If you have further heroku issues, try following [<http://support.heroku.com/forums/43117/entries/32505> these directions] to install (or re-install) the client.**

  MARKDOWN
end

step "Create a new Rails app" do

  console "rails new test_app"

  note "The command's output is voluminous. :-)"

  console "cd test_app"
  console "rails server"

  note <<-MARKDOWN
The first command should produce no output.
If "rails server" starts up with no errors, you're golden! It'll look something like this:
  MARKDOWN

  result <<-TEXT
=> Booting WEBrick
=> Rails 3.0.0 application starting in development on <http://0.0.0.0:3000>
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2010-09-30 21:04:12] INFO  WEBrick 1.3.1
[2010-09-30 21:04:12] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-09-30 21:04:12] INFO  WEBrick::HTTPServer#start: pid=24805 port=3000
  TEXT

  note <<-MARKDOWN
* If it does, congratulations! You've successfully installed Ruby AND Rails and started your server. ([Ruby and Rails 3 Diagnostics|Here are some more diagnostics to try if it's not so smooth.](ruby_and_rails_3_diagnostics_here_are_some_more_diagnostics_to_try_if_it_s_not_so_smooth_))

* In your browser, go to <http://localhost:3000> ([<http://wiki.devchix.com/images/successful-rails-install.jpg> screenshot of successful install])

* Back in the Console with Ruby and Rails window where you ran <code>rails server</code>, type control-c to kill(stop) the server.

  MARKDOWN
  end

step "Verify your database is set up" do
  note <<-MARKDOWN

* Open a Console with Ruby and Rails window.
<pre>
cd test_app</pre>
<pre>
rails generate scaffold user name:string email:string address:text active:boolean</pre>
<pre>
rake db:migrate</pre>
<pre>
rails server
</pre>

* In the browser, visit <http://localhost:3000/users>

* Click *New user* to create a user to make sure we can save to the database. (The window where you ran <code>rails server</code> will display debugging information as you do so.)

* In your Console with Ruby and Rails window where you ran <code>rails server</code>, type control-c to kill(stop) the server.

  MARKDOWN
  end

step "Verify git is working" do
  note <<-MARKDOWN

* Open a Console with Ruby and Rails window.

* Type the following commands:
<pre>
cd test_app
</pre>
<pre>
git init
</pre>
This should generate output similar to:
<pre>
 Initialized empty Git repository in c:/Sites/test_app/.git/
</pre>

* Type the following commands:
 * <code> git add .</code>  (Note the dot) (May get line ending warnings; safe to ignore.)
 * <code> git commit -m &quot;initial commit&quot;</code>  ([Output of initial check-in](output_of_initial_check_in))
 * <code>git log</code>  (We're just checking to make sure it worked. Verify that it has the  right user and commit message.)


  MARKDOWN
  end

step "Verify Heroku is set up " do
  note <<-MARKDOWN

* Install the heroku client:
<pre>gem install heroku</pre>


* Create your Heroku app like this:
<pre>heroku create</pre>


* Enter your Heroku email address and password. ([Output of heroku create command](output_of_heroku_create_command))


* To verify that the <code>heroku create</code> completed successfully, type:
<pre>git remote show</pre>
and see if the list includes <code>heroku</code>.


* If you get messages here complaining about public keys it's probably due to some confusion with SSH key usage by another app on your computer.  Call a volunteer over to help you figure it out.  Luckily this only needs to be done the first time you create a Heroku app.


* Edit your Gemfile and change the line:
<pre>gem 'sqlite3'</pre>
To this:

<pre>group :development, :test do
  gem 'sqlite3'
end
group :production do
  gem 'pg'
end</pre>

Prepare your rails app for deploying to Heroku
<pre>$ bundle install --without production
$ bundle exec rake assets:precompile</pre>


* Add the changes to git repository and push to heroku
<pre>$ git add .
$ git commit -m "Updates for heroku deployment"
$ git push heroku master</pre>


* It may ask: &quot;The authenticity of host 'heroku.com (75.101.145.87)' can't be established. RSA key fingerprint is 8b:48:5e:67:0e:c9:16:47:32:f2:87:0c:1f:c8:60:ad. Are you sure you want to continue connecting (yes/no)?&quot; Type <code>yes</code> and hit *<enter>*.

* [Output of successful first deploy](output_of_successful_first_deploy). Be sure to find your Heroku application name in the output. ([What to do if git seems stuck](what_to_do_if_git_seems_stuck))

* In the Console with Ruby and Rails window type:
<pre>heroku rake db:migrate</pre>
([Output of heroku rake db:migrate](output_of_heroku_rake_db_migrate))

* In the browser, go to your application's URL. You'll need your Heroku application name. The URL for your app is <code>*application name*.heroku.com</code> - so with the example output in the previous step, it would be <code>floating-winter-18.heroku.com</code>. Verify you see the welcome page. Leave this browser window open.

* In the browser, add <code>/users</code> to the end of the URL. Verify you see the user list page.

* Create a new user to verify you can write to the db on Heroku.

  MARKDOWN
  end

step "Almost there!" do
  link "get_a_sticker"  
end

step "Cleanup " do
  note <<-MARKDOWN

Ok, there is one more step. You won't be using the test application in the workshop; we just created it to make sure everything was working. **You should delete it now to reduce confusion during the workshop.** Don't worry about losing information - you'll repeat all the steps tomorrow, but more slowly so you can better understand what's going on under the hood.


* Right click on the test_app folder (inside C:\\Sites) and choose Delete.

* Delete the app from Heroku. Go to <https://heroku.com/myapps> and then click on your app name. Scroll to the bottom of the page and click Destroy App.
  MARKDOWN
end

step "if you have cucumber errors on windows " do
  note <<-MARKDOWN

to fix this error:

    uninitialized constant Cucumber::CODEPAGE (NameError)

add this to your ~/.bashrc

    export CUCUMBER_OUTPUT_ENCODING='cp1252'
  MARKDOWN
  
  todo "troubleshooting page"
end

