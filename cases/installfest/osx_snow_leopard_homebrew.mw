Here are a few steps to getting ready for Ruby and Rails development using OS X 10.5.  '''NOTE:''' These instructions need to be tested and verified.

== Install the Xcode Tools == 
It isn't always necessary to install Xcode, but it's best to do it anyway if you have access to the files.  You can get Xcode from a MacOS installation DVD or download it from Apple -- but at 2.5GB it's not going to be a fun download on shared WiFi.  See if you can get a burned copy or one available as a shared file on your local network.

Installing Xcode is straightforward with one caveat.  When it asks you about the components to install you need to make sure "Unix Tools" is selected.  Other than that just click Continue/Ok/Yes/etc.  Or, in more detail:

'''Steps:'''
* Insert your Snow Leopard install DVD. ([[xcode]])
* Open "Optional Installs" folder.
* Double-click Xcode.mkpg. It will bring up a window titled "Install Xcode."
* Click "Continue" button at the Introduction screen.
* Click "Continue" button at the License screen.
* Click "Agree" button in the popup to agree to the license.
* Click "Continue" button at the Destination Select screen.
* Don't change the checkboxes. Click "Continue" button at the Installation Type screen.
* Click "Install" button to start installing.
* Enter your user password in the popup to REALLY start installing. It takes a while.
* Click "Close" button once you get "The installation was successful" on the Summary screen.

== Install Git, Ruby, Rails, and Gems ==

* Open '''Terminal.app'''. It's in Applications -> Utilities. Add it to your dock; you'll be using it a lot. (To add it to the dock, click and hold the dock icon once Terminal is open. Select options -> keep in dock.)

* The first step is to create a directory where we'll store programs used to write and run your Ruby code.  Enter these two lines below in your Terminal.  Note that the '''sudo''' instruction will ask for your password.  Also, make sure you change '''yourusername''' to your actual Mac OS user name.  If you don't know your username, enter the command '''whoami''' in your terminal and it'll output your username.

  sudo mkdir /usr/local
  sudo chown -R yourusername /usr/local

* We've created the directory with '''mkdir''' for "Make Directory" and set the owner to you with '''chown''' (or "CHange OWNer").  This is the folder where Homebrew itself will live along with any programs we install using Homebrew.  To install Homebrew in one step run this line in your Terminal:

  curl -L http://github.com/mxcl/homebrew/tarball/master | tar xz --strip 1 -C /usr/local</pre>

* Now you should have the '''brew''' command available.  Try it out by just entering '''brew''' at your terminal and you should see the help scroll by.

* Next we'll install Git, the most popular source control system in the Ruby world:

  brew install git

== Install RVM, the Ruby Version Manager ==

RVM is Ruby Version Manager and is the easiest way to install and manage Ruby.  The official RVM install instructions [http://rvm.beginrescueend.com/rvm/install/ are available here], but this should work for you:

  bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )
  echo 'if [[ -s "$HOME/.rvm/scripts/rvm" ]]  ; then source "$HOME/.rvm/scripts/rvm" ; fi' >> ~/.bash_profile
  source "$HOME/.rvm/scripts/rvm"
  rvm install 1.8.7
  rvm use 1.8.7
  rvm --default 1.8.7

== Install SQLite Firefox plugin ==
* [http://www.mozilla.com/en-US/ Install Firefox], if you don't already have it. You may need to upgrade - SQLite Manager requires Firefox 3.5 or greater. 
* Install the [https://addons.mozilla.org/en-US/firefox/addon/5817 SQLite Manager] Firefox plugin. If you have trouble installing, double-check that your Firefox version is at least 3.5.

== Install KomodoEdit ==
We'll be using the KomodoEdit text editor during the workshop, though you are free to use a different editor if you prefer. It must be a plain-text editor, such as vi or Textmate. Microsoft Word and other word processing programs won't work. If in doubt, use KomodoEdit.

'''Installation steps:'''
* Download the [http://downloads.activestate.com/Komodo/releases/5.2.1/Komodo-Edit-5.2.1-4108-macosx-x86.dmg KomodoEdit installer].
* Select "Open with DiskImageMounter" in the file save dialog. This should be the default.
* It will open an installer with a KomodoEdit icon and a picture of your Applications folder. Drag KomodoEdit into your Applications folder.
* Unmount the installer disk image by dragging it from your desktop to the trash.

== Other required libraries ==
* Open a Terminal window and type the following with a return at the end of each line:
   gem install rspec rspec-rails cucumber cucumber-rails database_cleaner webrat heroku --no-rdoc --no-ri

== Verify successful installation ==
In this step, we make sure the installation script actually installed everything correctly. 

'''Steps to verify installation:'''

* In a Terminal window, type the following, followed by return:
    which git
It should say:
    /usr/local/bin/git
* In a Terminal window, type the following, followed by return:
    which ruby
It should say:
    /usr/local/bin/ruby
* In a Terminal window, type the following, followed by return:
    which rails
It should say:
    /usr/local/bin/rails
* In a Terminal window, type the following, followed by return:
    gem list --local
It should say:
    *** LOCAL GEMS ***
    
    actionmailer (2.3.5)
    actionpack (2.3.5)
    activerecord (2.3.5)
    activeresource (2.3.5)
    activesupport (2.3.5)
    builder (2.1.2)
    configuration (1.1.0)
    cucumber (0.6.2)
    cucumber-rails (0.2.4)
    diff-lcs (1.1.2)
    heroku (1.8.0)
    json (1.2.0)
    launchy (0.3.5)
    nokogiri (1.4.1)
    polyglot (0.3.0)
    rack (1.1.0)
    rails (2.3.5)
    rake (0.8.7)
    rest-client (1.3.1)
    rspec (1.3.0)
    rspec-rails (1.3.2)
    sqlite3-ruby (1.2.5)
    term-ansicolor (1.0.4)
    treetop (1.4.3)
    webrat (0.7.0)

'''Finally''', make sure you can do everything in the following sections of the [http://wiki.devchix.com/index.php?title=Server_2003 Windows install directions] (from "Create a Test Application" onwards). Wherever it says "git bash", you can mentally substitute "Terminal" - git bash is the name for the Terminal-equivalent program on Windows. I know, strange name! 
* [[Server_2003#Create_a_test_application|Create a test application]]
* [[Server_2003#Create a model|Create a model]]
* [[Server_2003#Check test_app in to Local Git|Check test_app in to Local Git]]
* [[Server_2003#Create_an_ssh_public_key|Create an ssh public key]]
* [[Server_2003#Create a Heroku Account|Create a Heroku Account]]
* [[Server_2003#Deploy test_app to Heroku|Deploy test_app to Heroku]]

== Congratulations! ==

You have everything you need to write a Ruby on Rails application.

== Cleanup ==
You won't be using the test application in the workshop; we just created it to make sure everything was working. You should delete it now to reduce confusion during the workshop. Don't worry about losing information - you'll repeat all the steps tomorrow, but more slowly so you can better understand what's going on under the hood.

* Drag the test_app folder (inside ruby_on_rails) to the trash. Leave ruby_on_rails on the desktop.
* Delete the app from Heroku. Go to https://heroku.com/myapps and then click on your app name. Scroll to the bottom of the page and click Destroy App.
